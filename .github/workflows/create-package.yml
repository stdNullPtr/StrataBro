name: Create Package
on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to build package from'
        required: true
        default: 'master'
        type: string
  release:
    types: [ published ]

permissions:
  contents: write # Needed to upload assets to release

jobs:
  create-package:
    runs-on: windows-latest

    steps:
      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: "6.8.2"
          host: "windows"
          target: "desktop"
          arch: "win64_msvc2022_64"
          setup-python: "false"
          cache: "true"

      - name: Set up MSVC
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Use the specified branch for manual dispatch, or the default branch for release events
          ref: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.branch || github.ref }}

      - name: Get release version
        id: get_version
        shell: bash
        run: |
          if [[ "${{ github.event_name }}" == "release" ]]; then
            VERSION=${GITHUB_REF#refs/tags/StrataBro-v}
            echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          else
            echo "VERSION=dev" >> $GITHUB_OUTPUT
          fi

      - name: Cmake generate and build
        run: |
          cmake -DCMAKE_PREFIX_PATH=${{env.QT_ROOT_DIR}} -S . -B build
          cmake --build build --config Release

      - name: Deploy with windeployqt
        run: |
          $deployDir = "deploy"
          New-Item -ItemType Directory -Path $deployDir -Force
          Copy-Item "build\Release\StrataBro.exe" -Destination $deployDir
          & ${{env.QT_ROOT_DIR}}\bin\windeployqt.exe --release --no-quick-import --no-compiler-runtime --no-translations --no-system-d3d-compiler $deployDir\StrataBro.exe

      - name: Create version info file
        run: |
          $version = "${{ steps.get_version.outputs.VERSION }}"
          $commitSha = "${{ github.sha }}".Substring(0, 8)
          $buildDate = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
          
          $content = @"
          Version: $version
          Commit: $commitSha
          Build Date: $buildDate
          "@
          
          Set-Content -Path "$deployDir/build_info.txt" -Value $content

      - name: Create release zip
        if: ${{ github.event_name == 'release' }}
        run: |
          Compress-Archive -Path "deploy\*" -DestinationPath "StrataBro-${{ steps.get_version.outputs.VERSION }}.zip" -Force

      - name: Upload to release
        if: ${{ github.event_name == 'release' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./StrataBro-${{ steps.get_version.outputs.VERSION }}.zip
          asset_name: StrataBro-${{ steps.get_version.outputs.VERSION }}.zip
          asset_content_type: application/zip

      - name: Upload package artifact
        uses: actions/upload-artifact@v4
        with:
          name: StrataBro-${{ steps.get_version.outputs.VERSION }}
          path: deploy
          retention-days: 30